# Copyright 2008 Wulf Krueger <philantrop@exherbo.org>
# Copyright 2008, 2009, 2010 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'cmake-2.6.0.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

require bash-completion elisp-optional [ source_directory=Docs ]

SUMMARY="Cross platform Make"
HOMEPAGE="http://www.cmake.org"
DOWNLOADS="${HOMEPAGE}/files/v$(ever range 1-2)/${PNV}.tar.gz"

REMOTE_IDS="freecode:${PN}"

UPSTREAM_CHANGELOG="${HOMEPAGE}/files/v$(ever range 1-2)/CMakeChangeLog-${PV}"

LICENCES="CMake"
SLOT="0"
MYOPTIONS="emacs qt4
    qt5 [[ description = [ Build against Qt5 instead of Qt4. ] ]]
    vim-syntax

    ( qt4 qt5 )  [[ number-selected = at-most-one ]]"

DEPENDENCIES="
    build+run:
        app-arch/bzip2
        app-arch/libarchive
        net-misc/curl[>=7.16.4][ssl(+)]
        dev-libs/expat[>=2.0.1]
        dev-libs/libxml2:2.0[>=2.6.28]
        qt4? ( x11-libs/qt:4 )
        qt5? ( x11-libs/qtbase:5 )
"

BASH_COMPLETIONS=(
     Docs/bash-completion/cmake
     'Docs/bash-completion/cpack cpack'
     'Docs/bash-completion/ctest ctest'
)
VIMFILE="${PN}.vim"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}"/remove-test-failure-submits-via-network2.patch
    "${FILES}"/${PN}-install-cmake.m4-to-usr-share-aclocal.patch
)
DEFAULT_SRC_TEST_PARAMS=( ARGS=--verbose )

src_prepare() {
    default

    if option qt4; then
        edo sed -i -e '/Icon/ s/\.png$//' Source/QtDialog/CMake.desktop
    fi
    # Don't install bash-completions, use bash-completion.exlib
    edo sed -i -e '/^install(FILES cmake cpack/d' Docs/bash-completion/CMakeLists.txt
}

src_configure() {
    local host=$(exhost --target)
    local build_cflags_var=${CHOST//-/_}_CFLAGS
    local build_ldflags_var=${CHOST//-/_}_LDFLAGS
    local build_cxxflags_var=${CHOST//-/_}_CXXFLAGS

    edo env                                                                     \
        CC="${CHOST}-gcc"                                                       \
        CXX="${CHOST}-g++"                                                      \
        CFLAGS="${!build_cflags_var}"                                           \
        LDFLAGS="${!build_ldflags_var}"                                         \
        CXXFLAGS="${!build_cxxflags_var}"                                       \
    ./bootstrap                                                                 \
        --parallel=${EXJOBS:-1}                                                 \
        --$(option qt5 || option qt4 || echo "no-")qt-gui                       \
        --system-libs                                                           \
        --prefix=/usr/${host}                                                   \
        --docdir=/../share/doc/${PNVR}                                          \
        --datadir=/../share/${PN}                                               \
        --mandir=/../share/man                                                  \
        --verbose                                                               \
        --                                                                      \
        -DCMAKE_C_COMPILER:PATH="${CC}"                                         \
        -DCMAKE_CXX_COMPILER:PATH="${CXX}"                                      \
        -DCMAKE_C_FLAGS:STRING="${CFLAGS}"                                      \
        -DCMAKE_CXX_FLAGS:STRING="${CXXFLAGS}"                                  \
        -DCMAKE_AR:PATH="${AR}"                                                 \
        -DCMAKE_RANLIB:PATH="${RANLIB}"                                         \
        -DCMAKE_LIBRARY_PATH:STRING=/usr/${host}/lib                            \
        -DCMAKE_INCLUDE_PATH:STRING=/usr/${host}/include                        \
        $(option qt4 && echo "-DCMAKE_DISABLE_FIND_PACKAGE_Qt5Core:BOOL=TRUE")
}

src_compile() {
    default
    elisp-optional_src_compile
}

src_install() {
    default

    bash-completion_src_install
    elisp-optional_src_install

    if option vim-syntax; then
        insinto /usr/share/vim/vimfiles/syntax
        doins "${WORK}"/Docs/cmake-syntax.vim

        insinto /usr/share/vim/vimfiles/indent
        doins "${WORK}"/Docs/cmake-indent.vim

        insinto /usr/share/vim/vimfiles/ftdetect
        doins "${FILES}/${VIMFILE}"
    fi
}

