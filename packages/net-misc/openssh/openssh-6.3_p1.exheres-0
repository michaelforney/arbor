# Copyright 2008-2013 Wulf C. Krueger <philantrop@exherbo.org>
# Copyright 2011 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'openssh-5.0_p1-r1.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation

require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.13 1.12 1.11 ] ] \
        pam systemd-service flag-o-matic

MY_PNV=${PNV/_/}

X509_VERSION=""
X509_PATCH="${MY_PNV}+x509-${X509_VERSION}.diff.gz"

SUMMARY="OpenSSH is a free version of the SSH connectivity tools"
HOMEPAGE="http://www.${PN}.org"
DOWNLOADS="
    mirror://openbsd/OpenSSH/portable/${MY_PNV}.tar.gz
"

if [[ -n ${X509_VERSION} ]]; then
    DOWNLOADS+="
        X509? ( http://roumenpetrov.info/${PN}/x509-${X509_VERSION}/${X509_PATCH} )
    "
fi

BUGS_TO="philantrop@exherbo.org"

UPSTREAM_RELEASE_NOTES="${HOMEPAGE}/txt/release-${PV%_p*}"

LICENCES="BSD-3"
SLOT="0"
PLATFORMS="~amd64 ~arm ~x86"
MYOPTIONS="
    baselayout
    gtk  [[ description = [ Build gnome-ssh-askpass ] ]]
    kerberos
    ldns [[ description = [ Use ldns for DNSSEC support ] ]]
    readline [[ description = [ Use libedit for tab completion in sftp ] ]]
    pam
    tcpd
    X
"

if [[ -n ${X509_VERSION} ]]; then
    MYOPTIONS+="
        X509 [[ description = [ Adds support for X.509 certificate authentication ] ]]
    "
fi

# Unfortunately, the tests need to be run as root.
RESTRICT="userpriv"

DEPENDENCIES="
    build:
        sys-kernel/linux-headers
        virtual/pkg-config
    build+run:
        user/sshd
        dev-libs/openssl[>=0.9.8g]
        sys-apps/shadow
        sys-libs/zlib[>=1.2.3]
        gtk? ( x11-libs/gtk+:2 )
        kerberos? ( app-crypt/heimdal )
        ldns? ( net-libs/ldns )
        readline? ( dev-libs/libedit )
        pam? ( sys-libs/pam[>=0.78] )
        tcpd? ( sys-apps/tcp-wrappers[>=7.6] )
        X? ( x11-apps/xauth )
"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}"/${PNV}-allow-host-prefixed-ar.patch
    "${FILES}"/${PN}-add-missing-includes.patch
    "${FILES}"/${PN}-fix-check-for-addr-v6-in-utmpx.patch
    -p0 "${FILES}"/${PN}-4.7_p1-GSSAPI-dns.patch
)

WORK=${WORKBASE}/${MY_PNV}

pkg_pretend() {
    if [[ -z ${X509_VERSION} ]] && has_version --root ${CATEGORY}/${PN}[X509]; then
        elog "${PNV} doesn't (yet) support the X509 patch. If you rely on it, don't install ${PNV}."
    fi
}

src_prepare() {
    default

    if [[ -n ${X509_VERSION} ]]; then
        option X509 && expatch -p1 "${WORKBASE}/${X509_PATCH%.gz}"
    fi

    edo sed -i -e '/_PATH_XAUTH/s:/usr/X11R6/bin/xauth:/usr/bin/xauth:' pathnames.h
    edo sed -i -e "s:-lcrypto:$($(exhost --tool-prefix)pkg-config --libs openssl):" configure.ac

    eautoreconf
}

src_configure() {
    export LD="${CC}"

    # Work around http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58245 by disabling the noreturn
    # attribute in exit(). This trick is from sabotage linux.
    [[ $(exhost --target) == *-*-*musl* ]] && append-flags -fno-builtin-exit -D__noreturn__=

    econf \
        --sysconfdir=/etc/ssh \
        --datadir=/usr/share/openssh \
        --disable-strip \
        --with-ldflags="${LDFLAGS}" \
        --with-pid-dir=/run \
        --with-privsep-path=/var/empty \
        --with-privsep-user=sshd \
        --with-md5-passwords \
        --with-ssl-engine \
        --without-selinux \
        $(option_with kerberos kerberos5) \
        $(option_with ldns) \
        $(option_with readline libedit) \
        $(option_with pam) \
        $(option_with tcpd tcp-wrappers)
}

src_compile() {
    default

    if option gtk ; then
        emake -C contrib gnome-ssh-askpass2
    fi
}

src_test() {
    esandbox allow_net 'unix:/tmp/ssh-*/agent.*'
    esandbox allow_net 'unix:/tmp/openssh.regress.ctl-sock.*'
    esandbox allow_net --connect 'unix:/nonexistent'

    # There's a sandbox violation I can't whitelist:
    # Reason: bind{family=AF_UNIX path=/var/tmp/paludis/build/net-misc-openssh-5.7_p1/temp//ssh-GbKiXikI4746/agent.4746 abstract=false}
    # Using net/whitelist/bind/unix doesn't fix it so I'll sandunbox/net here for now.
    esandbox disable_net

    if [[ -n ${X509_VERSION} ]]; then
        option X509 && export SSH_X509TESTS="blob_auth"
    fi
    emake -j1 tests

    esandbox enable_net

    esandbox disallow_net 'unix:/tmp/ssh-*/agent.*'
    esandbox disallow_net 'unix:/tmp/openssh.regress.ctl-sock.*'
    esandbox disallow_net --connect 'unix:/nonexistent'
}

src_install() {
    emake install-nokeys DESTDIR="${IMAGE}"

    into /usr/$(exhost --target)

    edo chmod 600 "${IMAGE}"/etc/ssh/sshd_config
    dobin contrib/ssh-copy-id

    if option baselayout ; then
        newinitd "${FILES}"/sshd.rc6 sshd
        newconfd "${FILES}"/sshd.confd sshd
    fi

    keepdir /etc/ssh/ca
    keepdir /etc/skel/.ssh
    edo rmdir "${IMAGE}"/var{/empty,}

    if option pam ; then
        edo sed -e "/^#UsePAM /s:.*:UsePAM yes:" \
                -e "/^#PasswordAuthentication /s:.*:PasswordAuthentication no:" \
                -i "${IMAGE}"/etc/ssh/sshd_config
        pamd_mimic_system sshd remote-login auth account password session
    fi

    doman contrib/ssh-copy-id.1
    emagicdocs
    dodoc OVERVIEW sshd_config

    diropts -m 0700
    dodir /etc/skel/.ssh

    if option gtk ; then
        newbin contrib/gnome-ssh-askpass2 gnome-ssh-askpass
    fi

    install_systemd_files

    # Delete empty dir.
    [[ -d ${IMAGE}/run ]] && edo rmdir "${IMAGE}"/run
}

pkg_postinst() {
    [[ ! -d ${ROOT}/var/empty ]] && edo mkdir -p "${ROOT}"/var/empty

    # Generate initial host keys if they don't exist.
    edo ssh-keygen -A

    if option baselayout ; then
        ewarn "Remember to merge your config files in /etc/ssh/ and then"
        ewarn "restart sshd: '/etc/init.d/sshd restart'."
        echo
    fi
    ewarn "Please be aware users need a valid shell in /etc/passwd"
    ewarn "in order to be allowed to login."
}

