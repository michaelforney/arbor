Source: buildroot
Reason: Fix build without innetgr

From f07ebe37f0396044e35eef0b45767337cc511da4 Mon Sep 17 00:00:00 2001
From: Dmitry Golubovsky <golubovsky@gmail.com>
Date: Sun, 29 Sep 2013 03:11:16 -0700
Subject: [PATCH] Build without innetgr

---
 modules/pam_group/pam_group.c           | 8 +++++++-
 modules/pam_succeed_if/pam_succeed_if.c | 4 ++++
 modules/pam_time/pam_time.c             | 8 +++++++-
 3 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/modules/pam_group/pam_group.c b/modules/pam_group/pam_group.c
index be5f20f..7eac854 100644
--- a/modules/pam_group/pam_group.c
+++ b/modules/pam_group/pam_group.c
@@ -655,8 +655,14 @@ static int check_account(pam_handle_t *pamh, const char *service,
 	    continue;
 	}
 	/* If buffer starts with @, we are using netgroups */
-	if (buffer[0] == '@')
+	if (buffer[0] == '@') {
+#ifdef HAVE_INNETGR
 	  good &= innetgr (&buffer[1], NULL, user, NULL);
+#else
+	  good = 0;
+	  pam_syslog (pamh, LOG_ERR, "pam_group does not have netgroup support");
+#endif /* HAVE_INNETGR */
+	}
 	/* otherwise, if the buffer starts with %, it's a UNIX group */
 	else if (buffer[0] == '%')
           good &= pam_modutil_user_in_group_nam_nam(pamh, user, &buffer[1]);
diff --git a/modules/pam_succeed_if/pam_succeed_if.c b/modules/pam_succeed_if/pam_succeed_if.c
index 32a7373..9e4d63d 100644
--- a/modules/pam_succeed_if/pam_succeed_if.c
+++ b/modules/pam_succeed_if/pam_succeed_if.c
@@ -233,16 +233,20 @@ evaluate_notingroup(pam_handle_t *pamh, const char *user, const char *group)
 static int
 evaluate_innetgr(const char *host, const char *user, const char *group)
 {
+#ifdef HAVE_INNETGR
 	if (innetgr(group, host, user, NULL) == 1)
 		return PAM_SUCCESS;
+#endif /* HAVE_INNETGR */
 	return PAM_AUTH_ERR;
 }
 /* Return PAM_SUCCESS if the (host,user) is NOT in the netgroup. */
 static int
 evaluate_notinnetgr(const char *host, const char *user, const char *group)
 {
+#ifdef HAVE_INNETGR
 	if (innetgr(group, host, user, NULL) == 0)
 		return PAM_SUCCESS;
+#endif /* HAVE_INNETGR */
 	return PAM_AUTH_ERR;
 }
 
diff --git a/modules/pam_time/pam_time.c b/modules/pam_time/pam_time.c
index c94737c..4898fd2 100644
--- a/modules/pam_time/pam_time.c
+++ b/modules/pam_time/pam_time.c
@@ -554,8 +554,14 @@ check_account(pam_handle_t *pamh, const char *service,
 	       continue;
 	  }
 	  /* If buffer starts with @, we are using netgroups */
-	  if (buffer[0] == '@')
+	  if (buffer[0] == '@') {
+#ifdef HAVE_INNETGR
 	    good &= innetgr (&buffer[1], NULL, user, NULL);
+#else
+	    good = 0;
+	    pam_syslog (pamh, LOG_ERR, "pam_time does not have netgroup support");
+#endif /* HAVE_INNETGR */
+	  }
 	  else
 	    good &= logic_field(pamh, user, buffer, count, is_same);
 	  D(("with user: %s", good ? "passes":"fails" ));
-- 
1.8.4

