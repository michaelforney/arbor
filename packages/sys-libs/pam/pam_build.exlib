# Copyright 2009-2013 Wulf C. Krueger
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'pam-1.0.1.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation

require flag-o-matic pam autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.13 ] ]

export_exlib_phases pkg_pretend src_prepare src_configure src_test src_install

MY_PN=Linux-PAM
MY_PNV=${MY_PN}-${PV}

HOMEPAGE="http://www.linux-pam.org"
SUMMARY="Linux-PAM provides Pluggable Authentication Modules"
DOWNLOADS="
    ${HOMEPAGE}/library/${MY_PNV}.tar.bz2
    https://fedorahosted.org/releases/l/i/linux-pam/${MY_PNV}.tar.bz2
    mirror://kernel/linux/libs/${PN}/library/${MY_PNV}.tar.bz2
"

BUGS_TO="philantrop@exherbo.org"

LICENCES="|| ( GPL-2 BSD-3 )"
SLOT="0"
MYOPTIONS="
    nis [[ description = [ Network Information Service support ] ]]
    parts: binaries configuration development documentation libraries
"

DEPENDENCIES="
    build:
        sys-devel/flex
        sys-devel/gettext
    build+run:
        sys-libs/cracklib[>=2.8.3]
        nis? ( net-libs/libtirpc )
"

WORK=${WORKBASE}/${MY_PNV}
AT_M4DIR=( m4 )

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}"/${PN}-fix-cppflags.patch
    "${FILES}"/${PN}-configure-Handle-built-in-libcrypt.patch
    "${FILES}"/${PN}-Build-without-innetgr.patch
    "${FILES}"/${PN}-Build-without-ruserok.patch
    "${FILES}"/${PN}-Add-missing-include-to-paths.h.patch
)

DEFAULT_SRC_CONFIGURE_PARAMS=( '--disable-audit' '--disable-prelude' '--disable-regenerate-docu'
                               '--disable-selinux' '--enable-cracklib' '--enable-db=no'
                               '--enable-nls' )
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( nis )

DEFAULT_SRC_INSTALL_EXTRA_DOCS=( doc/txt/* )

pam_build_pkg_pretend() {
    if [[ ! -f /etc/pam.d/other ]]; then
        ewarn "We won't be able to run the tests. They require /etc/pam.d/other which you don't"
        ewarn "have. If you want to run the tests before installing ${PN} for the first time,"
        ewarn "copy ${FILES}/pam.d/other"
        ewarn "to /etc/pam.d/other and start the installation again. This is STRONGLY recommended."
    fi
}

pam_build_src_prepare() {
    edo mkdir -p doc/txt
    for readme in modules/pam_*/README; do
        edo cp -f "${readme}" doc/txt/README.$(dirname "${readme}" | sed -e 's|^modules/||')
    done
    autotools_src_prepare
}

pam_build_src_configure() {
    local host_prefix=$(exhost --build)
    local build_cflags=${host_prefix//-/_}_CFLAGS                   \
        build_cppflags=${host_prefix//-/_}_CPPFLAGS                 \
        build_ldflags=${host_prefix//-/_}_LDFLAGS

    CC_FOR_BUILD="${host_prefix}-gcc"                               \
    BUILD_CFLAGS="${!build_cflags}"                                 \
    BUILD_CPPFLAGS="${!build_cppflags}"                             \
    BUILD_LDFLAGS="${!build_ldflags}"                               \
    econf                                                           \
        "--includedir=/usr/$(exhost --target)/include/security"     \
        "--enable-isadir=/usr/$(exhost --target)/lib/security"      \
        "--enable-securedir=/usr/$(exhost --target)/lib/security"
}

pam_build_src_test() {
    if exhost --is-native -q; then
        if [[ ! -f /etc/pam.d/other ]]; then
            ewarn "Skipping tests. You don't have /etc/pam.d/other."
        else
            emake -j1 check
        fi
    else
        echo "cross compiled host, skipping tests"
    fi
}

pam_build_src_install() {
    default

    keepdir /etc/security/limits.d
    keepdir /etc/security/namespace.d

    # NOTE(?) needs to be suid
    edo chmod u+s "${IMAGE}/usr/$(exhost --target)/sbin/unix_chkpwd"

    # install base pam configuration files
    dopamd "${FILES}"/pam.d/*

    expart binaries /usr/$(exhost --target)/sbin
    expart configuration /etc
    expart development /usr/$(exhost --target)/include
    expart documentation /usr/share/{doc,man}
    expart libraries /usr/$(exhost --target)/lib
}

