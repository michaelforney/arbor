# Copyright 2007 Bryan Ã˜stergaard
# Copyright 2010 Sterling X. Winter <replica@exherbo.org>
# Copyright 2012 Saleem Abdulrasool <compnerd@compnerd.org>
# Distributed under the terms of the GNU General Public License v2

require kernel

export_exlib_phases pkg_pretend src_compile src_install

myexparam path=

if ever at_least 3.0 ; then
    DOWNLOADS="mirror://kernel/linux/kernel/v$(ever major).x/$(exparam path)/linux-${PV}.tar.xz"
else
    DOWNLOADS="mirror://kernel/linux/kernel/v$(ever range 1-2)/$(exparam path)/linux-${PV}.tar.bz2"
fi

SUMMARY="Linux kernel headers"
HOMEPAGE="http://www.kernel.org"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS=""

RESTRICT="test"

WORK="${WORKBASE}/linux-${PV}"

linux-headers_pkg_pretend() {
    if ! kernel_version_at_least ${PV} ; then
        ewarn "Kernel headers version mismatch: Installing kernel headers newer than the"
        ewarn "running kernel can break your system. Do not proceed unless you know what"
        ewarn "you're doing."
    fi
}

linux-headers_src_compile() {
    :
}

# TODO(?) need to sanitize headers at some point
linux-headers_src_install() {
    local _host_architectures=(
        arm-exherbo-linux-gnueabi:arm
        i686-pc-linux-gnu:i386
        x86_64-pc-linux-gnu:x86_64
        x86_64-pc-linux-musl:x86_64
    )

    local arch= entry= target=$(exhost --target)

    for entry in "${_host_architectures[@]}" ; do
        [[ ${entry%:*} == ${target} ]] || continue
        arch=${entry#*:}
        break
    done

    [[ -n ${arch} ]] || die "unsupported host '${target}', please update linux-headers.exlib"

    edo mkdir -p "${IMAGE}/usr/${target}"
    edo emake \
        ARCH=${arch} \
        HOSTCC="${CHOST}-gcc -B/usr/${CHOST}/${CHOST}/bin" \
        INSTALL_HDR_PATH="${IMAGE}/usr/${target}" \
        headers_install
    edo find "${IMAGE}/usr/${target}/include" -name '.install' -delete -or \
                                            -name '..install.cmd' -delete
    # scsi.h is now provided by sys-libs/glibc
    ever at_least 2.6.35 || edo rm "${IMAGE}"/usr/${target}/include/scsi/scsi.h

    # nuke empty directory
    ever at_least 3.8 && edo rmdir "${IMAGE}"/usr/${target}/include/uapi
}

